/*
 * This build file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * user guide available at https://docs.gradle.org/3.4-rc-2/userguide/java_library_plugin.html
 */

plugins {
  id "com.github.johnrengelman.shadow" version "1.2.4"
}

// Apply the java-library plugin to add support for Java Library
apply plugin: 'java-library'
apply plugin: 'com.github.johnrengelman.shadow'

javadoc {
 options.addStringOption('overview','src/main/java/com/giantelectronicbrain/hadoop/overview.html')
}

configurations.all {
//Needed with older Hadoop to force older versions of guava, otherwise things blow up.
  resolutionStrategy.force 'com.google.guava:guava:15.0'
//Not sure why this is needed...
  resolutionStrategy.force 'org.htrace:htrace-core:3.0.3'
}

// In this section you declare where to find the dependencies of your project
repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    maven {
    	url 'http://repository.cloudera.com/artifactory/cloudera-repos/'
   	}
    jcenter()
    maven {
    	url 'http://central.maven.org/maven2/'
    	}
    maven {
    	url 'https://repo.spring.io/libs-milestone'
   	}
	maven {
		url "https://plugins.gradle.org/m2/"
	}
	maven {
		url "http://conjars.org/repo/"
	}
/*	maven {
		url "http://web-ite-6c.ca.boeing.com:8081/artifactory/Virtual-Boeing-Approved/"
	} */
}

dependencies {

// trying to get exact conformance to cdh5.9.0 jars
	compile 'org.apache.hadoop:hadoop-common:2.6.0-cdh5.9.0'
	compile 'org.apache.hadoop:hadoop-client:2.6.0-cdh5.9.0'
	compile 'org.apache.hadoop:hadoop-hdfs:2.6.0-cdh5.9.0'
	compile 'org.apache.hbase:hbase-client:1.2.0-cdh5.9.0'

	compile 'org.apache.hive:hive-common:1.1.0-cdh5.9.0'
	compile group: 'org.apache.hive', name: 'hive-service', version:'1.1.0-cdh5.9.0', transitive: false
	compile 'org.apache.thrift:libthrift:0.9.3'
	compile 'org.springframework.data:spring-data-hadoop:2.5.0.M1-cdh5'
	compile 'org.codehaus.groovy:groovy-all:2.4.9'
	compile 'org.apache.pig:pig:0.12.0-cdh5.9.0'
	compile 'org.antlr:antlr-runtime:3.4'
	compile 'cascading:cascading-core:3.+'
	compile 'cascading:cascading-hadoop2-tez:3.+'
	compile 'cascading:cascading-local:3.+'
	compile 'org.apache.tez:tez-api:0.8.+'
	compile 'org.apache.tez:tez-mapreduce:0.8.+'
	compile 'org.apache.tez:tez-common:0.8.+'
	compile 'org.apache.tez:tez-runtime-library:0.8.+'
	compile 'org.apache.tez:tez-runtime-internals:0.8.+'
	compile 'org.apache.tez:hadoop-shim:0.8.+'
	compile 'org.apache.tez:hadoop-shim-2.6:0.8.+'
	compile 'org.apache.tez:hadoop-shim-impls:0.8.+'	
//	compile 'org.apache.tez:tez-job-analyzer:0.8.+'
	compile 'org.apache.tez:tez-dag:0.8.+'
	compile 'org.apache.commons:commons-collections4:4.+'
//	compile 'org.apache.hadoop:hadoop-common:2.6.0'
//	compile 'org.htrace:htrace-core:3.0.4'
	compile 'org.springframework.data:spring-cascading:2.0.0.M5-cdh5'
	compile 'org.apache.spark:spark-core_2.11:1.4.0'

    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'
	// Use MRUnit test library
    testImplementation group: 'org.apache.mrunit', name: 'mrunit', version: '1.+', classifier: 'hadoop2'
	testImplementation 'org.hamcrest:hamcrest-library:1.3'
	testImplementation 'org.springframework:spring-test:4.3.4.RELEASE'
	testImplementation 'org.apache.pig:pigunit:0.12.0-cdh5.9.0'
	
	
}

task copyToLib(type: Copy) {
    into "$buildDir/lib"
    from configurations.runtime
}
=======
/*
 * This build file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * user guide available at https://docs.gradle.org/3.4-rc-2/userguide/java_library_plugin.html
 */

plugins {
  id "com.github.johnrengelman.shadow" version "1.2.4"
}

// Apply the java-library plugin to add support for Java Library
apply plugin: 'java-library'
apply plugin: 'com.github.johnrengelman.shadow'

javadoc {
 options.addStringOption('overview','src/main/java/com/giantelectronicbrain/hadoop/overview.html')
}

configurations.all {
//Needed with older Hadoop to force older versions of guava, otherwise things blow up.
  resolutionStrategy.force 'com.google.guava:guava:15.0'
//Not sure why this is needed...
  resolutionStrategy.force 'org.htrace:htrace-core:3.0.3'
}

// In this section you declare where to find the dependencies of your project
repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    maven {
    	url 'http://repository.cloudera.com/artifactory/cloudera-repos/'
   	}
    jcenter()
    maven {
    	url 'http://central.maven.org/maven2/'
    	}
    maven {
    	url 'https://repo.spring.io/libs-milestone'
   	}
	maven {
		url "https://plugins.gradle.org/m2/"
	}
	maven {
		url "http://conjars.org/repo/"
	}
/*	maven {
		url "http://web-ite-6c.ca.boeing.com:8081/artifactory/Virtual-Boeing-Approved/"
	} */
}

dependencies {

// trying to get exact conformance to cdh5.9.0 jars
	compile 'org.apache.hadoop:hadoop-common:2.6.0-cdh5.9.0'
	compile 'org.apache.hadoop:hadoop-client:2.6.0-cdh5.9.0'
	compile 'org.apache.hadoop:hadoop-hdfs:2.6.0-cdh5.9.0'
	compile 'org.apache.hbase:hbase-client:1.2.0-cdh5.9.0'

	compile 'org.apache.hive:hive-common:1.1.0-cdh5.9.0'
	compile group: 'org.apache.hive', name: 'hive-service', version:'1.1.0-cdh5.9.0', transitive: false
	compile 'org.apache.thrift:libthrift:0.9.3'
	compile 'org.springframework.data:spring-data-hadoop:2.5.0.M1-cdh5'
	compile 'org.codehaus.groovy:groovy-all:2.4.9'
	compile 'org.apache.pig:pig:0.12.0-cdh5.9.0'
	compile 'org.antlr:antlr-runtime:3.4'
	compile 'cascading:cascading-core:3.+'
	compile 'cascading:cascading-hadoop2-tez:3.+'
	compile 'cascading:cascading-local:3.+'
	compile 'org.apache.tez:tez-api:0.8.+'
	compile 'org.apache.tez:tez-mapreduce:0.8.+'
	compile 'org.apache.tez:tez-common:0.8.+'
	compile 'org.apache.tez:tez-runtime-library:0.8.+'
	compile 'org.apache.tez:tez-runtime-internals:0.8.+'
	compile 'org.apache.tez:hadoop-shim:0.8.+'
	compile 'org.apache.tez:hadoop-shim-2.6:0.8.+'
	compile 'org.apache.tez:hadoop-shim-impls:0.8.+'	
//	compile 'org.apache.tez:tez-job-analyzer:0.8.+'
	compile 'org.apache.tez:tez-dag:0.8.+'
	compile 'org.apache.commons:commons-collections4:4.+'
//	compile 'org.apache.hadoop:hadoop-common:2.6.0'
//	compile 'org.htrace:htrace-core:3.0.4'
	compile 'org.springframework.data:spring-cascading:2.0.0.M5-cdh5'

    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'
	// Use MRUnit test library
    testImplementation group: 'org.apache.mrunit', name: 'mrunit', version: '1.+', classifier: 'hadoop2'
	testImplementation 'org.hamcrest:hamcrest-library:1.3'
	testImplementation 'org.springframework:spring-test:4.3.4.RELEASE'
	testImplementation 'org.apache.pig:pigunit:0.12.0-cdh5.9.0'
	
	compile 'org.springframework.data:spring-data-jpa:1.11.3.RELEASE'
	// Get some Mahout stuff to try out
	compile 'org.apache.mahout:mahout-core:0.9-cdh5.9.0'
	compile 'org.hibernate.javax.persistence:hibernate-jpa-2.1-api:1.0.0.Final'
	compile 'org.hibernate:hibernate-core:5.2.10.Final'
	compile 'mysql:mysql-connector-java:5.1.+' // useful for testing
}

task copyToLib(type: Copy) {
    into "$buildDir/lib"
    from configurations.runtime
}

